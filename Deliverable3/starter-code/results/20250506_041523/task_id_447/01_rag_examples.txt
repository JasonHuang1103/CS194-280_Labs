lean _ object * o ) returns true if o is an array, or false otherwise. ffi function lean _ array _ object * lean _ to _ array ( lean _ object * o ) performs a runtime check that o is indeed an array. if o is not an array, an assertion fails. ← 18. 15. linked lists 18. 17. subtypes → [SEP]
lean _ object * o ) returns true if o is an array, or false otherwise. ffi function lean _ array _ object * lean _ to _ array ( lean _ object * o ) performs a runtime check that o is indeed an array. if o is not an array, an assertion fails. ← 18. 15. linked lists 18. 17. subtypes → [SEP]
still want to structure the proof. lean also provides the " bullet " notation. < tactics > ( or · < tactics > ) for structuring proofs : theorem test ( p q : prop ) ( hp : p ) ( hq : q ) : p ∧ q ∧ p : = by apply and. intro. exact hp. apply and. intro. exact hq. exact hp basic tactics in addition to apply and exact, another useful tactic is intro, which introduces a hypothesis. what follows is an example of an identity from propositional logic that we proved in a previous chapter, now proved using tactics. example ( p q r : prop ) : p ∧ ( q ∨ r ) ↔ ( p ∧ q ) ∨ ( p ∧ r ) : = by apply iff. intro. intro h apply or. elim ( and. right h ). intro hq apply or. inl apply and. intro. exact and. left h. exact hq. intro hr apply or. inr apply and. intro. exact and. left h. exact hr. intro h apply or. elim h. intro hpq apply and. intro. exact and. left hpq. apply or. inl exact and. right hpq. intro hpr apply