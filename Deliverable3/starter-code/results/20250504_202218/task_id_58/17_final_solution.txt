{
  "code": "(a < 0 && b > 0) || (a > 0 && b < 0)",
  "proof": "theorem hasOppositeSign_spec_satisfied (a : Int) (b : Int) :\n  hasOppositeSign_spec a b (hasOppositeSign a b) := by\n  unfold hasOppositeSign hasOppositeSign_spec\n  apply Iff.intro\n  case mp =>\n    intro h\n    cases h\n    case inl h\u2081 =>\n      simp only [Bool.or_true, Bool.and_true, Bool.true_iff] \n      rw [\u2190decide_eq_true (decide (a < 0) = true), \u2190decide_eq_true (decide (b > 0) = true)]\n      simp [h\u2081.left, h\u2081.right]\n    case inr h\u2082 =>\n      simp only [Bool.true_or, Bool.and_true, Bool.true_iff]\n      rw [\u2190decide_eq_true (decide (a > 0) = true), \u2190decide_eq_true (decide (b < 0) = true)]\n      simp [h\u2082.left, h\u2082.right]\n  case mpr =>\n    intro h\n    cases Bool.or_eq_true.mp h\n    case inl h\u2081 =>\n      left\n      simp [decide_eq_true_iff] at h\u2081\n      exact \u27e8h\u2081.1, h\u2081.2\u27e9\n    case inr h\u2082 =>\n      right\n      simp [decide_eq_true_iff] at h\u2082\n      exact \u27e8h\u2082.1, h\u2082.2\u27e9"
}