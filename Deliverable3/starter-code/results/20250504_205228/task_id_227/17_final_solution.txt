{
  "code": "if a <= b then\n  if a <= c then a else c\nelse\n  if b <= c then b else c",
  "proof": "theorem minOfThree_spec_satisfied (a : Int) (b : Int) (c : Int) :\n  minOfThree_spec a b c (minOfThree a b c) := by\n  unfold minOfThree minOfThree_spec\n  split\n  \u00b7 -- Prove result <= a \u2227 result <= b \u2227 result <= c\n    split\n    \u00b7 -- Prove result <= a\n      by_cases h\u2081 : a <= b\n      \u00b7 by_cases h\u2082 : a <= c\n        \u00b7 simp [h\u2081, h\u2082] -- result = a\n        \u00b7 simp [h\u2081, h\u2082] -- result = c\n          exact le_of_not_ge h\u2082\n      \u00b7 by_cases h\u2082 : b <= c\n        \u00b7 simp [h\u2081, h\u2082] -- result = b\n        \u00b7 simp [h\u2081, h\u2082] -- result = c\n          exact le_of_not_ge h\u2082\n    \u00b7 split\n      \u00b7 -- Prove result <= b\n        by_cases h\u2081 : a <= b\n        \u00b7 by_cases h\u2082 : a <= c\n          \u00b7 simp [h\u2081, h\u2082] -- result = a\n            exact h\u2081\n          \u00b7 simp [h\u2081, h\u2082] -- result = c\n            exact le_trans (le_of_not_ge h\u2082) h\u2081\n        \u00b7 by_cases h\u2082 : b <= c\n          \u00b7 simp [h\u2081, h\u2082] -- result = b\n          \u00b7 simp [h\u2081, h\u2082] -- result = c\n            exact le_of_not_ge h\u2082\n      \u00b7 -- Prove result <= c\n        by_cases h\u2081 : a <= b\n        \u00b7 by_cases h\u2082 : a <= c\n          \u00b7 simp [h\u2081, h\u2082] -- result = a\n            exact h\u2082\n          \u00b7 simp [h\u2081, h\u2082] -- result = c\n        \u00b7 by_cases h\u2082 : b <= c\n          \u00b7 simp [h\u2081, h\u2082] -- result = b\n            exact h\u2082\n          \u00b7 simp [h\u2081, h\u2082] -- result = c\n  \u00b7 -- Prove result = a \u2228 result = b \u2228 result = c\n    by_cases h\u2081 : a <= b\n    \u00b7 by_cases h\u2082 : a <= c\n      \u00b7 simp [h\u2081, h\u2082] -- result = a\n      \u00b7 simp [h\u2081, h\u2082] -- result = c\n    \u00b7 by_cases h\u2082 : b <= c\n      \u00b7 simp [h\u2081, h\u2082] -- result = b\n      \u00b7 simp [h\u2081, h\u2082] -- result = c"
}